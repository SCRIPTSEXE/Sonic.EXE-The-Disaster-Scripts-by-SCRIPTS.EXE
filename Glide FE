-- Referencias al jugador y su personaje
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Creamos la GUI y el botón "Glide Lol"
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = player:WaitForChild("PlayerGui")

local glideButton = Instance.new("TextButton")
glideButton.Name = "GlideButton"
glideButton.Text = "Glide Lol"
glideButton.Size = UDim2.new(0, 50, 0, 50) -- Botón pequeño
glideButton.Position = UDim2.new(0.5, -25, 0.8, -25) -- Posición aproximada en la pantalla
glideButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
glideButton.BorderSizePixel = 0
glideButton.Parent = screenGui

-- Hacemos el botón circular con UICorner
local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(1, 0)
uicorner.Parent = glideButton

-- Permitimos que el botón se pueda mover
glideButton.Active = true
glideButton.Draggable = true

-- Variables de estado
local isGliding = false
local cooldown = false
local glideCooldownTime = 27
local currentCooldown = glideCooldownTime
local touchedConnection

-- Definimos la animación (usando el id proporcionado)
local animationId = "rbxassetid://104077515216832"
local animation = Instance.new("Animation")
animation.AnimationId = animationId

local glideAnimTrack

-- Función para iniciar el "glide" (hacer flotar al personaje)
local function startGliding()
	if cooldown then return end
	if isGliding then
		stopGliding()
		return
	end
	isGliding = true
	
	-- Reproducir la animación
	local animator = humanoid:FindFirstChildOfClass("Animator")
	if not animator then
		animator = Instance.new("Animator", humanoid)
	end
	glideAnimTrack = animator:LoadAnimation(animation)
	glideAnimTrack:Play()
	
	-- Aplicar fuerza para hacer flotar al personaje (ajusta los valores según necesidad)
	local bodyVelocity = Instance.new("BodyVelocity")
	bodyVelocity.Name = "GlideVelocity"
	bodyVelocity.Parent = rootPart
	bodyVelocity.Velocity = Vector3.new(0, 10, 0)
	bodyVelocity.MaxForce = Vector3.new(0, math.huge, 0)
	
	-- Detectar cuando se toca el suelo para detener el glide
	local function onTouched(hit)
		-- Aquí se asume que el suelo es parte del Terrain o tiene nombre "Baseplate"
		if hit:IsDescendantOf(workspace.Terrain) or hit.Name == "Baseplate" then
			stopGliding()
		end
	end
	
	touchedConnection = rootPart.Touched:Connect(onTouched)
end

-- Función para detener el glide y activar el cooldown
function stopGliding()
	if not isGliding then return end
	isGliding = false
	
	-- Detener la animación si está reproduciéndose
	if glideAnimTrack then
		glideAnimTrack:Stop()
	end
	
	-- Eliminar la fuerza de flotación
	local velocity = rootPart:FindFirstChild("GlideVelocity")
	if velocity then
		velocity:Destroy()
	end
	
	-- Desconectar el evento de contacto con el suelo
	if touchedConnection then
		touchedConnection:Disconnect()
		touchedConnection = nil
	end
	
	-- Iniciar el cooldown de 27 segundos con contador en el botón
	cooldown = true
	currentCooldown = glideCooldownTime
	glideButton.Text = tostring(currentCooldown)
	
	spawn(function()
		while currentCooldown > 0 do
			wait(1)
			currentCooldown = currentCooldown - 1
			glideButton.Text = tostring(currentCooldown)
		end
		cooldown = false
		glideButton.Text = "Glide Lol"
	end)
end

-- Conexión del botón para activar/desactivar el glide
glideButton.MouseButton1Click:Connect(function()
	if cooldown then return end
	if isGliding then
		stopGliding()
	else
		startGliding()
	end
end)
